@page "/"

@using Components;
@using Components.Models;
@using OurTextEditor.Component;


<link rel="stylesheet" href="~/css/index.css" />

<body class="index">
    <div class="container">
        <div id="files-ribbon">
            <!--
                Print all file names kept in the application state.
                ! This action is only performed once. For dynamic file tab changes use the functions
                and ipc channels provided in site.js !
            -->

            @foreach (var name in fileNames)
            {
                <button class="file-tab" onclick="changeToSelected(this)">@name</button>
            }

        </div>
        <div id="text-box-refresh">
            <FileContent  CurrentFileName="@Title"/>
        </div>
    </div>
</body>

<footer class="footer">
    <div class="container">
        Ln 1, Col 1 <br />
        Characters: 0, Words: 0
    </div>
</footer>

@code{
    // TODO: The title should be changed to the currently selected file.
    //probably change to component and get the real title by passing the argument in some way
    [Parameter]
    public string Title { get; set; }

    private IEnumerable<string> fileNames;

    protected override void OnInitialized()
    {
        Title = MockFunctionality.GetMockFileName();
        fileNames = Components.Models.ApplicationState.Instance.FileHandlerInstance.GetOpenFileNames();
    }
}

